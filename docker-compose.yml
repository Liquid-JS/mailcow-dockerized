version: '3'

services:
  mysql:
    image: mariadb:10.1
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--host", "localhost", "--silent"]
      interval: 10s
      timeout: 30s
      retries: 5
    volumes:
      - ./server-data/mysql:/var/lib/mysql/
      - ./data/conf/mysql/:/etc/mysql/conf.d/:ro
    environment:
      - MYSQL_ROOT_PASSWORD=${DBROOT}
      - MYSQL_DATABASE=${DBNAME}
      - MYSQL_USER=${DBUSER}
      - MYSQL_PASSWORD=${DBPASS}
    restart: always

  redis:
    image: redis:alpine
    volumes:
      - ./server-data/redis:/data/
    restart: always

  clamd:
    image: mailcow/clamd
    build: ./data/Dockerfiles/clamav
    restart: always

  rspamd:
    image: mailcow/rspamd
    build: ./data/Dockerfiles/rspamd
    command: > 
      /bin/bash -c "
      sleep 5;
      /usr/bin/rspamd -f -u _rspamd -g _rspamd
      "
    depends_on:
      - nginx
    volumes:
      - ./data/conf/rspamd/override.d/:/etc/rspamd/override.d:ro
      - ./data/conf/rspamd/local.d/:/etc/rspamd/local.d:ro
      - ./data/conf/rspamd/lua/:/etc/rspamd/lua/:ro
      - ./server-data/dkim:/data/dkim
      - ./server-data/rspamd:/var/lib/rspamd
    restart: always

  phpfpm:
    image: mailcow/phpfpm
    build: ./data/Dockerfiles/php-fpm
    command: "php-fpm -d date.timezone=${TZ}"
    depends_on:
      - redis
    volumes:
      - ./data/web:/web:ro
      - ./data/conf/rspamd/dynmaps:/dynmaps:ro
      - ./server-data/dkim:/data/dkim
    environment:
      - DBNAME=${DBNAME}
      - DBUSER=${DBUSER}
      - DBPASS=${DBPASS}
      - MAILCOW_HOSTNAME=${MAILCOW_HOSTNAME}
    restart: always

  sogo:
    image: mailcow/sogo
    build: ./data/Dockerfiles/sogo
    environment:
      - DBNAME=${DBNAME}
      - DBUSER=${DBUSER}
      - DBPASS=${DBPASS}
      - TZ=${TZ}
    volumes:
      - ./data/conf/sogo/:/etc/sogo/
    restart: always

  rmilter:
    image: mailcow/rmilter
    build: ./data/Dockerfiles/rmilter
    volumes:
      - ./data/conf/rmilter/:/etc/rmilter.conf.d/:ro
    restart: always

  dovecot:
    image: mailcow/dovecot
    build: ./data/Dockerfiles/dovecot
    volumes:
      - ./data/conf/dovecot:/usr/local/etc/dovecot
      - ./data/assets/ssl:/etc/ssl/mail/:ro
      - ./data/conf/sogo/:/etc/sogo/
      - ./server-data/vmail:/var/vmail
      - ./server-data/crypt:/mail_crypt/
    environment:
      - DBNAME=${DBNAME}
      - DBUSER=${DBUSER}
      - DBPASS=${DBPASS}
    ports:
      - "143:143"
      - "993:993"
      - "110:110"
      - "995:995"
      - "4190:4190"
    restart: always
    hostname: ${MAILCOW_HOSTNAME}

  postfix:
    image: mailcow/postfix
    build: ./data/Dockerfiles/postfix
    volumes:
      - ./data/conf/postfix:/opt/postfix/conf
      - ./data/assets/ssl:/etc/ssl/mail/:ro
      - ./server-data/postfix:/var/spool/postfix
      - ./server-data/crypt:/var/lib/zeyple
    environment:
      - DBNAME=${DBNAME}
      - DBUSER=${DBUSER}
      - DBPASS=${DBPASS}
    ports:
      - "25:25"
      - "465:465"
      - "587:587"
    restart: always
    hostname: ${MAILCOW_HOSTNAME}

  memcached:
    image: memcached:alpine
    restart: always

  nginx:
    depends_on:
      - sogo
      - phpfpm
    image: nginx:mainline-alpine
    healthcheck:
      test: ["CMD", "ping", "phpfpm", "-c", "10"]
      interval: 10s
      timeout: 30s
      retries: 5
    environment:
      - MAILCOW_HOSTNAME=${MAILCOW_HOSTNAME}
    volumes:
      - ./data/web:/web:ro
      - ./data/conf/rspamd/dynmaps:/dynmaps:ro
      - ./data/assets/ssl/:/etc/ssl/mail/:ro
      - ./data/conf/nginx/:/etc/nginx/conf.d/:rw
    restart: always
    labels:
      - "traefik.backend=mailcow"
      - "traefik.frontend.rule=Host: ${MAILCOW_HOSTNAME}"
    networks:
      - webgateway
      - default

  ipv6nat:
    image: robbertkl/ipv6nat
    restart: always
    privileged: true
    network_mode: "host"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /lib/modules:/lib/modules:ro

  traefik:
    image: traefik
    command: --web --docker --docker.domain=${MAILCOW_HOSTNAME} --logLevel=DEBUG
    networks:
      - webgateway
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.toml:/traefik.toml

networks:
  webgateway:
    driver: bridge
